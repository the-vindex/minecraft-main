-- Zombie pigman farm using portals
local portalCount = 3
local length = 1 + 3*portalCount
local turnDir = "left"
local currentSlot
local placeFunctions = {}
placeFunctions["down"] = turtle.placeDown
placeFunctions["up"] = turtle.placeUp
placeFunctions[""] = turtle.place


function forward(count)
	if count == nil then
		count = 1
	end
	for i = 1,count do
		turtle.forward()
	end
end

function back(count)
	if count == nil then
		count = 1
	end
	for i = 1,count do
		turtle.back()
	end
end

function changeTurnDir()
	if turnDir == "left" then
		turnDir = "right"
	elseif turnDir == "right" then
		turnDir = "left"
	else
		print("Unknown turn dir")
		exit(1)
	end
end

function autoTurn()
	if turnDir == "left" then
		turtle.turnLeft()
	elseif turnDir == "right" then
		turtle.turnRight()
	else
		print("Unknown turn dir")
		exit(1)
	end
end

function place(dir)
	if turtle.getItemCount(currentSlot) == 0 then
		if currentSlot < 8 then
			selectSlot(currentSlot+1)
		else 
			print("out of items")
			exit(1)
		end
	end
	if dir == nil then dir = "" end
	
	return placeFunctions[dir]()
end

function selectSlot(num)
	turtle.select(num)
	currentSlot=num
end

function buildRows()
	for i = 1,portalCount+1 do
		for step = 1,length do
			place("down")
			if step < length then
				forward()
			end
		end

		if i < portalCount+1 then
			autoTurn()
			forward(3)
			autoTurn()
			changeTurnDir()
		end
	end
end

function buildColumns(move)
	for i = 1,portalCount+1 do
		for step = 1,portalCount+1 do
			place("down")
			place("up")
			if step == length then
				autoTurn()
			end
			move()
			place()
			move(2)
		end

		if i < portalCount+1 then
			move(2)
			autoTurn()			
			changeTurnDir()
		end
	end
end

--selectSlot(1)
--buildRows()
--changeTurnDir()
--autoTurn()
--buildRows()

--autoTurn()
changeTurnDir()
buildColumns(back)
